@function rem($px, $mobile: false) {
  // converts px to rem
  @return ($px / font-size(0, false)) +rem;
}

@function vw($px, $weight-name: 'xl') {
  // converts px to vw
  $vw-context: (map-get($windows-width, $weight-name) * .01) * 1;
  @return ($px/$vw-context) * 1vw;
}

@function vh($px, $height-name: 'xl') {
  // converts px to vh
  $vh-context: (map-get($windows-height, $height-name) * .01) * 1;
  @return ($px/$vh-context) * 1vh;
}

@function color($key: 'light', $opacity: 1) {
  // Search colors
  @return rgba(map-get($colors, $key), $opacity);
}

@function font-size($level: 0, $rem: true) {
  // Search for font-sizes
  @if $rem {
    @return rem(map-get($font-sizes, $level));
  } @else if not $rem {
    @return map-get($font-sizes, $level);
  }
}

@function weight($level: 0) {
  // Search weight
  @return map-get($font-weights, $level);
}

@function border-radius($level: 0) {
  // Search border-radius
  @return rem(map-get($border-radius, $level));
}

@function shadow($key: 'black') {
  // Search shadow
  $currentMap: map-get($shadows, $key);
  $result: '';

  @each $size in map-get($currentMap, 'size') {
    $result: $result + "#{rem($size)} "
  }

  $result: $result + color(
    map-get($currentMap, 'color'),
    map-get($currentMap, 'opacity')
  );

  @return #{$result};
}

@function border($key: 'light') {
  // Search borders
  $currentMap: map-get($borders, $key);
  $result: rem(map-get($currentMap, 'size')) map-get($currentMap, 'type') color(
    map-get($currentMap, 'color'),
    map-get($currentMap, 'opacity')
  );

  @return #{$result};
}